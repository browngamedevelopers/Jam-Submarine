<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSubmarineStill</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.playerSub = self.id;

global.view_visible[0]=true; //make view visible
width=1024; //width of desired view
height=768; //height of desired view

//adjusting view width and height, as well as scale (port)
global.view_wview[0]=width;
global.view_hview[0]=height;
global.view_wport[0]=width;
global.view_hport[0]=height;

energy = global.energyMax+1000000;

image_xscale = 0.05;
image_yscale = 0.05;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Light variables

lightBrightness = .6;
lightDarkness = .3;
lightLength = 250;
lightAngle = 15;
lightColor = c_white;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Lighting
surface_set_target(global.ambientLightIndex)
draw_set_color(lightColor);
draw_set_alpha(lightBrightness);
draw_set_blend_mode(bm_subtract);

var offset = 22;
var playerSub = instance_find(obj_Submarine, 0);


draw_primitive_begin(pr_trianglelist);

draw_vertex_colour(x+lengthdir_x(offset,image_angle),y+lengthdir_y(offset,image_angle),lightColor,lightBrightness);
draw_vertex_colour(x+lengthdir_x(lightLength,image_angle-lightAngle),y+lengthdir_y(lightLength,image_angle - lightAngle),lightColor,lightDarkness);
draw_vertex_colour(x+lengthdir_x(lightLength,image_angle+lightAngle),y+lengthdir_y(lightLength,image_angle + lightAngle),lightColor,lightDarkness);

draw_primitive_end();
draw_set_alpha(1);
draw_set_blend_mode(bm_normal);
surface_reset_target();


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//snap view x and y positions to object's coordinates, subtracting one-half the width and height to center it
view_xview[0]=0;
view_yview[0]=y-(view_hview[0]/2); 

if (view_yview[0] &lt; 0) {
    view_yview[0] = 0;
}

if (view_yview &gt; (room_height - 768)) {
    view_yview[0] = room_height - 768;
}

var dead = false;
var yoffset = abs(sin(direction*3.14/180)*sprite_width/2)
var xoffset = abs(cos(direction*3.14/180)*sprite_width/2)

if (x &gt; (room_width - xoffset) || x &lt; xoffset || y &gt; (room_height - yoffset)|| y &lt; yoffset) {
    //this stops the object from moving after it hits an edge
    speed = 0;
    sprite_index = sprSubmarineDeath;
    //dead = true;
}

if (!dead) {
    if (speed &gt; 0) {
        //slows the ship down overtime
        speed -= 0.05;
    }
    
    if ((keyboard_check_pressed(vk_up) || keyboard_check_pressed(vk_down))  &amp;&amp; (energy &gt; 0)) {
        //change sprite to moving image
        sprite_index = sprSubmarineMove;
    }
    
    if (keyboard_check(vk_up) &amp;&amp; (energy &gt; 0)) {
        //ship movement in direction of image
        motion_add(image_angle, 0.2);
    
        //This is the maximum speed
        if (speed &gt; 20) {
            speed = 20;
        }
    }
    
    if (keyboard_check(vk_down) &amp;&amp; (energy &gt; 0)) {
        //ship movement in direction of image
        motion_add(image_angle, -0.2);
    
        //This is the maximum speed
        if (speed &lt; -20) {
            speed = -20;
        }
    }
    
    if (keyboard_check(vk_left)) {
        //rotates the submarine left
        image_angle += 3;
    }
    
    if (keyboard_check(vk_right)) {
        //rotates the submarine right
        image_angle -= 3;
    }
    
    
    if (((keyboard_check_released(vk_up) 
        &amp;&amp; !keyboard_check(vk_down)) 
        || (keyboard_check_released(vk_down) 
        &amp;&amp; !keyboard_check(vk_up))) 
        &amp;&amp; (energy &gt; 0)) {    
        //change sprite to still image
        sprite_index = sprSubmarineStill;
    }
}

if ((keyboard_check(vk_right) || keyboard_check(vk_down)) &amp;&amp; (energy &gt; 0)) {
    energy -= global.moveEnergyDecrease / room_speed;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

draw_set_color(lightColor);
draw_set_alpha(lightBrightness);
draw_set_blend_mode(bm_add);

var offset = 22;

var playerSub = instance_find(obj_Submarine, 0);

/*Let's reserve d3d calls for 3D drawing; Fun fact: I can't believe they didn't change
the prefix for DIRECT 3D...*/
//d3d_transform_set_rotation_z(playerSub.image_angle);
//d3d_transform_add_translation(playerSub.x, 
//                              playerSub.y,0);
//draw_ellipse(offset,-lightWidth/2,lightLength,lightWidth/2,false);



draw_primitive_begin(pr_trianglelist);

draw_vertex_colour(x+lengthdir_x(offset,image_angle),y+lengthdir_y(offset,image_angle),lightColor,lightBrightness);
draw_vertex_colour(x+lengthdir_x(lightLength,image_angle-lightAngle),y+lengthdir_y(lightLength,image_angle - lightAngle),lightColor,lightDarkness);
draw_vertex_colour(x+lengthdir_x(lightLength,image_angle+lightAngle),y+lengthdir_y(lightLength,image_angle + lightAngle),lightColor,lightDarkness);
draw_primitive_end();



//d3d_transform_set_identity();
draw_set_alpha(1);
draw_set_blend_mode(bm_normal);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>1000,974</point>
    <point>1000,1000</point>
  </PhysicsShapePoints>
</object>
