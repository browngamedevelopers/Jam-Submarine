<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>foe</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ai = "circle";
chaseSpeed = 5;
fleeSpeed = 10;
speed = chaseSpeed;


//Ideas
/*
Behavior: Circle around to back of foe, then attack. 

*/
orbitSpeed = 7;
orbitRange = 50;
orbitccwise = 1;

//waiting to do something else, use alarm 1.
next_action = "chase";

//wandering
wanderSpeed = 4;
width = 10;
height = 10;
targetx = x;
targety = y;
leftx = x -width/2;
rightx = x+ width/2;
upy = y-height/2;
downy= y+height/2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ai = next_action
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ai = "chase"
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>closest_Sub = instance_nearest(x, y, obj_Submarine);
dirToFoe = point_direction(x, y, closest_Sub.x, closest_Sub.y);
distToFoe = distance_to_object(closest_Sub);
if (ai = "chase"){
    direction = dirToFoe;
    speed = chaseSpeed;
    image_angle = direction
}else if (ai = "flee"){
  speed = fleeSpeed;
  direction = 180 + dirToFoe;
  alarm[0] = 60;
  image_angle = direction
  
}else if (ai = "circle"){
    direction = (dirToFoe + ((90 + (orbitRange-distToFoe)) * orbitccwise));
    retresult = (dirToFoe mod 360) - (closest_Sub.direction mod 360);
    if (retresult &gt; 180)
     retresult = 360 - retresult;
    if((distToFoe&lt;=(orbitRange+10)) and (retresult&lt;5)){//blarg the angle doesn't work
        ai = "wait";
        next_action = "chase";
        direction = dirToFoe;
        alarm[1] = 10;
    }
    speed = orbitSpeed;
}else if (ai = "wait"){
speed = 0;
}else if (ai = "wander"){
    speed = min(wanderSpeed, distance_to_point(targetx, targety));
    if((x == targetx) and (y == targety)){
    targetx = random_range(leftx, rightx);
    targety = random_range(upy, downy);
    ai = "wait";
        next_action = "wander";
        direction = point_direction(x, y, targetx, targety);
        alarm[1] = 10;}
}
        


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
